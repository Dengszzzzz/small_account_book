name: small_account_book
description: 小账本，记账助手~

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.17.6 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.5

  ########################### 基本都需要的 ##############################
  # 1.用于显示隐藏 flutter 的 splash screen
  flutter_native_splash: ^2.2.9
  # 2.toast 库
  fluttertoast: ^8.0.9
  # 3.网络访问库
  #http: ^0.13.4
  dio: ^4.0.6
  # 4.InheritedWidget的包装器 ，使它们更易于使用和更可重用。
  provider: ^6.0.3
  # 5.State Manager、Navigation Manager
  get: 4.6.5
  # 6.数据缓存库
  shared_preferences: ^2.0.15
  # 7.本地路径
  path_provider: ^2.0.11
  # 8.权限
  permission_handler: ^8.3.0
  # 9.图片扩展库（官方 Image 扩展组件, 支持加载以及失败显示，缓存网络图片，缩放拖拽图片，图片浏览(微信掘金效果)，滑动退出页面(微信掘金效果)，编辑图片(裁剪旋转翻转)，保存，绘制自定义效果等功能）
  extended_image: ^6.2.1
  # 10.数据库
  sqflite: 2.0.1
  # 11.设备信息(Build.Version Build.model device等)
  device_info_plus: ^4.1.3
  # 设备唯一标识符
  android_id: ^0.0.7
  # App应用信息(version、buildNumber等)
  package_info_plus: 3.0.0
  # 12.网络链接状态(判断网络是wifi还是4G)
  connectivity_plus: 2.3.7
  # 13.webView 插件
  webview_flutter: ^3.0.4
  # 14.用于从图像库中选取图像，并使用相机拍摄新照片
  image_picker: ^0.8.5+3
  # 15.webSocket长连接
  web_socket_channel: ^2.2.0
  # 16.Intl包，国际化
  intl: ^0.17.0
  # 17.屏幕适配
  flutter_screenutil: ^5.5.4
  json_annotation: ^4.7.0

  ########################### 非必备，当便于开发的 ##############################
  # 1.依赖于Dart常用工具类库common_utils，以及对其他第三方库封装
  flustars_flutter3: ^3.0.0
  # 2.常见动画库
  animations: ^2.0.5
  # 3.banner左右滑动需要
  flutter_swiper: ^1.1.6
  # 4.加载框样式
  flutter_spinkit: ^5.1.0
  # 5.下拉刷新和上拉加载的库
  pull_to_refresh: ^2.0.0
  # 6.加载更多,使用的目的是为了流式布局
  loading_more_list: ^4.1.2
  # 7.侧滑列表项，侧滑删除、更多、分享等
  flutter_slidable: ^2.0.0
  # 8.图片处理库（双指缩放、旋转等）
  # photo_view: ^0.14.0
  # 9.系统分享
  share_plus: ^4.0.10
  # 10.允许展开和折叠文本
  # readmore: ^2.2.0
  # 11.视频播放库
  #video_player: ^2.4.5
  # 12.对 video_player库 进行了一层封装，便于上层使用
  #chewie: ^1.3.4
  # 13.时间选择器
  flutter_datetime_picker: ^1.5.1
  # 14.地址选择器（首字母选择、三级列表选中）
  city_pickers: ^1.1.3
  # 15.Des加解密
  dart_des: ^1.0.2
  # 16.AES加解密
  encrypt: ^5.0.1
  # 17.列表滚动到指定位置
  scroll_to_index: ^3.0.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

  assets:
    - assets/images/
    - assets/file/


############################## flutter_native_splash 闪屏界面 #################################
### 感觉限制颇多，https://blog.csdn.net/pfourfire/article/details/123115828
flutter_native_splash:
  color: "#ffffff"
  fullscreen: true

  # 生成原生代码来自定义 Flutter 默认白色原生闪屏界面的背景色和闪屏图像。
  # 自定义下面的参数，然后在命令行终端运行下面的命令：
  # flutter pub run flutter_native_splash:create
  # 要恢复为 Flutter 默认的白色闪屏界面，运行下面的命令：
  # flutter pub run flutter_native_splash:remove

  # 只有 color 或 background_image 是必需的参数。使用 color 将闪屏界面的背景设置为单色。
  # 使用 background_image 可将 png 图像设置为闪屏界面的背景。该图像会被拉伸以适应应用大小。
  # color 和 background_image 不能同时设置，只有一个会被使用。
  #color: "#ffffff"
  #background_image: "assets/background.png"

  # 以下是可选的参数。去掉注释前面的 #可使参数起作用。

  # image 参数允许你指定在闪屏界面使用的图像。它必须是 png 文件，且应该是用于4倍像素密度的大小。
  #image: assets/ic_splash1.png

  # 该属性允许你指定图像作为商标在闪屏界面显示。它必须是 png 文件。现在它只支持 Android 和 iOS 。
  #branding: assets/ic_splash3.png

  # 为黑暗模式指定商标图像
  #branding_dark: assets/dart_dark.png

  # 要将商标图像放置在界面底部，可以使用 bottom 、 bottomRight 和 bottomLeft 。如果未指定或者指定了其它值，使用默认值 bottom 。
  # 确保该内容模式值与 android_gravity 值 和 ios_content_mode 值不相似。
  #branding_mode: bottom

  # color_dark 、 background_image_dark 和 image_dark 用于设备在黑暗模式时设置背景色和图像。
  # 如果没有指定，应用会使用上面的参数。如果指定了 image_dark ，必须要指定 color_dark 或 background_image_dark 。
  # color_dark 和 background_image_dark 不能同时设置。
  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png

  # android 、 ios 和 web 参数可用于不为对应的平台生成闪屏界面。
  #android: false
  #ios: false
  #web: false

  #  可用 android_gravity 、 android_gravity 、 ios_content_mode 和 web_image_mode 来设置闪屏图像的位置。默认是居中。
  #
  # android_gravity 可以是以下 Android Gravity 其中之一 (查看
  # https://developer.android.com/reference/android/view/Gravity): bottom 、 center 、
  # center_horizontal 、 center_vertical 、 clip_horizontal 、 clip_vertical 、
  # end 、 fill 、 fill_horizontal 、 fill_vertical 、 left 、 right 、 start 或 top 。
  #android_gravity: top
  #
  # ios_content_mode 可以是以下 iOS UIView.ContentMode 其中之一 (查看
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill 、
  # scaleAspectFit 、 scaleAspectFill 、 center 、 top 、 bottom 、
  # left 、 right 、 topLeft 、 topRight 、 bottomLeft 或  bottomRight 。
  #ios_content_mode: center
  #
  # web_image_mode 可以是以下模式其中之一：center 、 contain 、 stretch 和 cover 。
  #web_image_mode: center

  # 要隐藏通知栏，使用 fullscreen 参数 。在 Web 上不起作为，因为 Web 没有通知栏。默认是 false 。
  # 注意: 不像 Android 、 iOS 当应用加载时不会自动显示通知栏。
  #       要显示通知栏，在 Flutter 应用中添加以下代码：
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true

  # 如果改变了 info.plist 的名字，可以使用 info_plist_files 指定对应的文件名。
  # 只需移除下面三行前面的 # 字符，不要移除任何空格：
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
#  - 'ios/Runner/Info-Release.plist'
